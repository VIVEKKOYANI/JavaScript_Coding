Event delegation is a technique in JavaScript where a single event listener is added to a parent element to handle events on its child elements. This is useful for dynamically added elements and improves performance by reducing the number of event listeners.

Example
document.getElementById("parent").addEventListener("click", function (event) {
    if (event.target.classList.contains("child")) {
        alert("Child element clicked: " + event.target.textContent);
    }
});

HTML

<div id="parent">
    <button class="child">Button 1</button>
    <button class="child">Button 2</button>
</div>

How It Works?
The event listener is attached to #parent.
When a child (.child) is clicked, the event bubbles up to the parent.
The parent checks if the clicked target has the child class and responds accordingly.